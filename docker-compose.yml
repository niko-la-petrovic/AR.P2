version: '3.7'

x-common: &common
  networks:
  - prometheus

volumes:
  arp2_data:
    external: true
  prometheus_data:
    external: true
  grafana_data:
    external: true

networks:
  prometheus:

services:
  manager:
    build:
      context: .
      dockerfile: ./AR.P2.Manager/Dockerfile
    container_name: manager
    restart: unless-stopped
    volumes:
    - arp2_data:/data
    <<: *common
    environment:
    - ASPNETCORE_FileUploadSettings__UseWebRoot=false
    - ASPNETCORE_FileUploadSettings__FileUploadDirectoryPath=/data
    - ASPNETCORE_FileUploadSettings__FileUploadRequestPath=/upload
    ports:
    - 7000:80

  worker:
    build: 
      context: .
      dockerfile: ./AR.P2.Worker/Dockerfile

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
    - ./prometheus:/etc/prometheus
    - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    ports:
    - 9090:9090
    <<: *common
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_PATHS_CONFIG=/etc/grafana/grafana.ini
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Anonymous
    ports:
      - 3001:3000
    <<: *common
    labels:
      org.label-schema.group: "monitoring"


